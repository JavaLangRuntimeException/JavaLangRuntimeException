"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/link-preview-js";
exports.ids = ["vendor-chunks/link-preview-js"];
exports.modules = {

/***/ "(action-browser)/./node_modules/link-preview-js/build/constants.js":
/*!*********************************************************!*\
  !*** ./node_modules/link-preview-js/build/constants.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CONSTANTS = void 0;\nexports.CONSTANTS = {\n    REGEX_VALID_URL: new RegExp(\"^\" +\n        // protocol identifier\n        \"(?:(?:https?|ftp)://)\" +\n        // user:pass authentication\n        \"(?:\\\\S+(?::\\\\S*)?@)?\" +\n        \"(?:\" +\n        // IP address exclusion\n        // private & local networks\n        \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +\n        \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +\n        \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +\n        // IP address dotted notation octets\n        // excludes loopback network 0.0.0.0\n        // excludes reserved space >= 224.0.0.0\n        // excludes network & broacast addresses\n        // (first & last IP address of each class)\n        \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" +\n        \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" +\n        \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" +\n        \"|\" +\n        // host name\n        \"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)\" +\n        // domain name\n        \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\" +\n        // TLD identifier\n        \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\" +\n        // TLD may end with dot\n        \"\\\\.?\" +\n        \")\" +\n        // port number\n        \"(?::\\\\d{2,5})?\" +\n        // resource path\n        \"(?:[/?#]\\\\S*)?\" +\n        \"$\", \"i\"),\n    REGEX_LOOPBACK: new RegExp(\"^\" +\n        // Loopback: 127.0.0.0 - 127.255.255.255\n        \"(?:127(?:\\\\.\\\\d{1,3}){3})\" +\n        \"|\" +\n        // Private Class A: 10.0.0.0 - 10.255.255.255\n        \"(?:10(?:\\\\.\\\\d{1,3}){3})\" +\n        \"|\" +\n        // Private Class B: 172.16.0.0 - 172.31.255.255\n        \"(?:172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +\n        \"|\" +\n        // Private Class C: 192.168.0.0 - 192.168.255.255\n        \"(?:192\\\\.168(?:\\\\.\\\\d{1,3}){2})\" +\n        \"|\" +\n        // Link-local: 169.254.0.0 - 169.254.255.255\n        \"(?:169\\\\.254(?:\\\\.\\\\d{1,3}){2})\" +\n        \"|\" +\n        // Documentation: 192.0.2.0/24, 198.51.100.0/24, 203.0.113.0/24\n        \"(?:192\\\\.0\\\\.2(?:\\\\.\\\\d{1,3}){1})\" +\n        \"|\" +\n        \"(?:198\\\\.51\\\\.100(?:\\\\.\\\\d{1,3}){1})\" +\n        \"|\" +\n        \"(?:203\\\\.0\\\\.113(?:\\\\.\\\\d{1,3}){1})\" +\n        \"|\" +\n        // Carrier-Grade NAT (CGNAT): 100.64.0.0 - 100.127.255.255\n        \"(?:100\\\\.(?:6[4-9]|[7-9]\\\\d|1[0-1]\\\\d)(?:\\\\.\\\\d{1,3}){2})\" +\n        \"$\", \"i\"),\n    REGEX_CONTENT_TYPE_IMAGE: new RegExp(\"image/.*\", \"i\"),\n    REGEX_CONTENT_TYPE_AUDIO: new RegExp(\"audio/.*\", \"i\"),\n    REGEX_CONTENT_TYPE_VIDEO: new RegExp(\"video/.*\", \"i\"),\n    REGEX_CONTENT_TYPE_TEXT: new RegExp(\"text/.*\", \"i\"),\n    REGEX_CONTENT_TYPE_APPLICATION: new RegExp(\"application/.*\", \"i\"),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9saW5rLXByZXZpZXctanMvYnVpbGQvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxJQUFJLEVBQUUsRUFBRTtBQUN4Qyw2Q0FBNkMsSUFBSSxFQUFFLEVBQUU7QUFDckQsa0RBQWtELElBQUksRUFBRSxFQUFFO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixJQUFJLHFCQUFxQixFQUFFO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLEdBQUc7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsSUFBSTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLElBQUksRUFBRSxFQUFFO0FBQ2pDO0FBQ0E7QUFDQSx3QkFBd0IsSUFBSSxFQUFFLEVBQUU7QUFDaEM7QUFDQTtBQUNBLGtEQUFrRCxJQUFJLEVBQUUsRUFBRTtBQUMxRDtBQUNBO0FBQ0EsK0JBQStCLElBQUksRUFBRSxFQUFFO0FBQ3ZDO0FBQ0E7QUFDQSwrQkFBK0IsSUFBSSxFQUFFLEVBQUU7QUFDdkM7QUFDQTtBQUNBLGlDQUFpQyxJQUFJLEVBQUUsRUFBRTtBQUN6QztBQUNBLG9DQUFvQyxJQUFJLEVBQUUsRUFBRTtBQUM1QztBQUNBLG1DQUFtQyxJQUFJLEVBQUUsRUFBRTtBQUMzQztBQUNBO0FBQ0EseURBQXlELElBQUksRUFBRSxFQUFFO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvdGFuYWgvZ2l0L0phdmFMYW5nUnVudGltZUV4Y2VwdGlvbi5naXRodWIuaW8vbm9kZV9tb2R1bGVzL2xpbmstcHJldmlldy1qcy9idWlsZC9jb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNPTlNUQU5UUyA9IHZvaWQgMDtcbmV4cG9ydHMuQ09OU1RBTlRTID0ge1xuICAgIFJFR0VYX1ZBTElEX1VSTDogbmV3IFJlZ0V4cChcIl5cIiArXG4gICAgICAgIC8vIHByb3RvY29sIGlkZW50aWZpZXJcbiAgICAgICAgXCIoPzooPzpodHRwcz98ZnRwKTovLylcIiArXG4gICAgICAgIC8vIHVzZXI6cGFzcyBhdXRoZW50aWNhdGlvblxuICAgICAgICBcIig/OlxcXFxTKyg/OjpcXFxcUyopP0ApP1wiICtcbiAgICAgICAgXCIoPzpcIiArXG4gICAgICAgIC8vIElQIGFkZHJlc3MgZXhjbHVzaW9uXG4gICAgICAgIC8vIHByaXZhdGUgJiBsb2NhbCBuZXR3b3Jrc1xuICAgICAgICBcIig/ISg/OjEwfDEyNykoPzpcXFxcLlxcXFxkezEsM30pezN9KVwiICtcbiAgICAgICAgXCIoPyEoPzoxNjlcXFxcLjI1NHwxOTJcXFxcLjE2OCkoPzpcXFxcLlxcXFxkezEsM30pezJ9KVwiICtcbiAgICAgICAgXCIoPyExNzJcXFxcLig/OjFbNi05XXwyXFxcXGR8M1swLTFdKSg/OlxcXFwuXFxcXGR7MSwzfSl7Mn0pXCIgK1xuICAgICAgICAvLyBJUCBhZGRyZXNzIGRvdHRlZCBub3RhdGlvbiBvY3RldHNcbiAgICAgICAgLy8gZXhjbHVkZXMgbG9vcGJhY2sgbmV0d29yayAwLjAuMC4wXG4gICAgICAgIC8vIGV4Y2x1ZGVzIHJlc2VydmVkIHNwYWNlID49IDIyNC4wLjAuMFxuICAgICAgICAvLyBleGNsdWRlcyBuZXR3b3JrICYgYnJvYWNhc3QgYWRkcmVzc2VzXG4gICAgICAgIC8vIChmaXJzdCAmIGxhc3QgSVAgYWRkcmVzcyBvZiBlYWNoIGNsYXNzKVxuICAgICAgICBcIig/OlsxLTldXFxcXGQ/fDFcXFxcZFxcXFxkfDJbMDFdXFxcXGR8MjJbMC0zXSlcIiArXG4gICAgICAgIFwiKD86XFxcXC4oPzoxP1xcXFxkezEsMn18MlswLTRdXFxcXGR8MjVbMC01XSkpezJ9XCIgK1xuICAgICAgICBcIig/OlxcXFwuKD86WzEtOV1cXFxcZD98MVxcXFxkXFxcXGR8MlswLTRdXFxcXGR8MjVbMC00XSkpXCIgK1xuICAgICAgICBcInxcIiArXG4gICAgICAgIC8vIGhvc3QgbmFtZVxuICAgICAgICBcIig/Oig/OlthLXpcXFxcdTAwYTEtXFxcXHVmZmZmMC05XS0qKSpbYS16XFxcXHUwMGExLVxcXFx1ZmZmZjAtOV0rKVwiICtcbiAgICAgICAgLy8gZG9tYWluIG5hbWVcbiAgICAgICAgXCIoPzpcXFxcLig/OlthLXpcXFxcdTAwYTEtXFxcXHVmZmZmMC05XS0qKSpbYS16XFxcXHUwMGExLVxcXFx1ZmZmZjAtOV0rKSpcIiArXG4gICAgICAgIC8vIFRMRCBpZGVudGlmaWVyXG4gICAgICAgIFwiKD86XFxcXC4oPzpbYS16XFxcXHUwMGExLVxcXFx1ZmZmZl17Mix9KSlcIiArXG4gICAgICAgIC8vIFRMRCBtYXkgZW5kIHdpdGggZG90XG4gICAgICAgIFwiXFxcXC4/XCIgK1xuICAgICAgICBcIilcIiArXG4gICAgICAgIC8vIHBvcnQgbnVtYmVyXG4gICAgICAgIFwiKD86OlxcXFxkezIsNX0pP1wiICtcbiAgICAgICAgLy8gcmVzb3VyY2UgcGF0aFxuICAgICAgICBcIig/OlsvPyNdXFxcXFMqKT9cIiArXG4gICAgICAgIFwiJFwiLCBcImlcIiksXG4gICAgUkVHRVhfTE9PUEJBQ0s6IG5ldyBSZWdFeHAoXCJeXCIgK1xuICAgICAgICAvLyBMb29wYmFjazogMTI3LjAuMC4wIC0gMTI3LjI1NS4yNTUuMjU1XG4gICAgICAgIFwiKD86MTI3KD86XFxcXC5cXFxcZHsxLDN9KXszfSlcIiArXG4gICAgICAgIFwifFwiICtcbiAgICAgICAgLy8gUHJpdmF0ZSBDbGFzcyBBOiAxMC4wLjAuMCAtIDEwLjI1NS4yNTUuMjU1XG4gICAgICAgIFwiKD86MTAoPzpcXFxcLlxcXFxkezEsM30pezN9KVwiICtcbiAgICAgICAgXCJ8XCIgK1xuICAgICAgICAvLyBQcml2YXRlIENsYXNzIEI6IDE3Mi4xNi4wLjAgLSAxNzIuMzEuMjU1LjI1NVxuICAgICAgICBcIig/OjE3MlxcXFwuKD86MVs2LTldfDJcXFxcZHwzWzAtMV0pKD86XFxcXC5cXFxcZHsxLDN9KXsyfSlcIiArXG4gICAgICAgIFwifFwiICtcbiAgICAgICAgLy8gUHJpdmF0ZSBDbGFzcyBDOiAxOTIuMTY4LjAuMCAtIDE5Mi4xNjguMjU1LjI1NVxuICAgICAgICBcIig/OjE5MlxcXFwuMTY4KD86XFxcXC5cXFxcZHsxLDN9KXsyfSlcIiArXG4gICAgICAgIFwifFwiICtcbiAgICAgICAgLy8gTGluay1sb2NhbDogMTY5LjI1NC4wLjAgLSAxNjkuMjU0LjI1NS4yNTVcbiAgICAgICAgXCIoPzoxNjlcXFxcLjI1NCg/OlxcXFwuXFxcXGR7MSwzfSl7Mn0pXCIgK1xuICAgICAgICBcInxcIiArXG4gICAgICAgIC8vIERvY3VtZW50YXRpb246IDE5Mi4wLjIuMC8yNCwgMTk4LjUxLjEwMC4wLzI0LCAyMDMuMC4xMTMuMC8yNFxuICAgICAgICBcIig/OjE5MlxcXFwuMFxcXFwuMig/OlxcXFwuXFxcXGR7MSwzfSl7MX0pXCIgK1xuICAgICAgICBcInxcIiArXG4gICAgICAgIFwiKD86MTk4XFxcXC41MVxcXFwuMTAwKD86XFxcXC5cXFxcZHsxLDN9KXsxfSlcIiArXG4gICAgICAgIFwifFwiICtcbiAgICAgICAgXCIoPzoyMDNcXFxcLjBcXFxcLjExMyg/OlxcXFwuXFxcXGR7MSwzfSl7MX0pXCIgK1xuICAgICAgICBcInxcIiArXG4gICAgICAgIC8vIENhcnJpZXItR3JhZGUgTkFUIChDR05BVCk6IDEwMC42NC4wLjAgLSAxMDAuMTI3LjI1NS4yNTVcbiAgICAgICAgXCIoPzoxMDBcXFxcLig/OjZbNC05XXxbNy05XVxcXFxkfDFbMC0xXVxcXFxkKSg/OlxcXFwuXFxcXGR7MSwzfSl7Mn0pXCIgK1xuICAgICAgICBcIiRcIiwgXCJpXCIpLFxuICAgIFJFR0VYX0NPTlRFTlRfVFlQRV9JTUFHRTogbmV3IFJlZ0V4cChcImltYWdlLy4qXCIsIFwiaVwiKSxcbiAgICBSRUdFWF9DT05URU5UX1RZUEVfQVVESU86IG5ldyBSZWdFeHAoXCJhdWRpby8uKlwiLCBcImlcIiksXG4gICAgUkVHRVhfQ09OVEVOVF9UWVBFX1ZJREVPOiBuZXcgUmVnRXhwKFwidmlkZW8vLipcIiwgXCJpXCIpLFxuICAgIFJFR0VYX0NPTlRFTlRfVFlQRV9URVhUOiBuZXcgUmVnRXhwKFwidGV4dC8uKlwiLCBcImlcIiksXG4gICAgUkVHRVhfQ09OVEVOVF9UWVBFX0FQUExJQ0FUSU9OOiBuZXcgUmVnRXhwKFwiYXBwbGljYXRpb24vLipcIiwgXCJpXCIpLFxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/link-preview-js/build/constants.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/link-preview-js/build/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/link-preview-js/build/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getPreviewFromContent = exports.getLinkPreview = void 0;\nvar cheerio_1 = __importDefault(__webpack_require__(/*! cheerio */ \"(action-browser)/./node_modules/cheerio/lib/index.js\"));\nvar cross_fetch_1 = __webpack_require__(/*! cross-fetch */ \"(action-browser)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\nvar abort_controller_1 = __importDefault(__webpack_require__(/*! abort-controller */ \"(action-browser)/./node_modules/abort-controller/dist/abort-controller.js\"));\nvar url_1 = __importDefault(__webpack_require__(/*! url */ \"url\"));\nvar constants_1 = __webpack_require__(/*! ./constants */ \"(action-browser)/./node_modules/link-preview-js/build/constants.js\");\nfunction throwOnLoopback(address) {\n    if (constants_1.CONSTANTS.REGEX_LOOPBACK.test(address)) {\n        throw new Error(\"SSRF request detected, trying to query host\");\n    }\n}\nfunction metaTag(doc, type, attr) {\n    var nodes = doc(\"meta[\".concat(attr, \"='\").concat(type, \"']\"));\n    return nodes.length ? nodes : null;\n}\nfunction metaTagContent(doc, type, attr) {\n    return doc(\"meta[\".concat(attr, \"='\").concat(type, \"']\")).attr(\"content\");\n}\nfunction getTitle(doc) {\n    var title = metaTagContent(doc, \"og:title\", \"property\") ||\n        metaTagContent(doc, \"og:title\", \"name\");\n    if (!title) {\n        title = doc(\"head > title\").text();\n    }\n    return title;\n}\nfunction getSiteName(doc) {\n    var siteName = metaTagContent(doc, \"og:site_name\", \"property\") ||\n        metaTagContent(doc, \"og:site_name\", \"name\");\n    return siteName;\n}\nfunction getDescription(doc) {\n    var description = metaTagContent(doc, \"description\", \"name\") ||\n        metaTagContent(doc, \"Description\", \"name\") ||\n        metaTagContent(doc, \"og:description\", \"property\");\n    return description;\n}\nfunction getMediaType(doc) {\n    var node = metaTag(doc, \"medium\", \"name\");\n    if (node) {\n        var content = node.attr(\"content\");\n        return content === \"image\" ? \"photo\" : content;\n    }\n    return (metaTagContent(doc, \"og:type\", \"property\") ||\n        metaTagContent(doc, \"og:type\", \"name\"));\n}\nfunction getImages(doc, rootUrl, imagesPropertyType) {\n    var images = [];\n    var nodes;\n    var src;\n    var dic = {};\n    var imagePropertyType = imagesPropertyType !== null && imagesPropertyType !== void 0 ? imagesPropertyType : \"og\";\n    nodes =\n        metaTag(doc, \"\".concat(imagePropertyType, \":image\"), \"property\") ||\n            metaTag(doc, \"\".concat(imagePropertyType, \":image\"), \"name\");\n    if (nodes) {\n        nodes.each(function (_, node) {\n            if (node.type === \"tag\") {\n                src = node.attribs.content;\n                if (src) {\n                    src = url_1.default.resolve(rootUrl, src);\n                    images.push(src);\n                }\n            }\n        });\n    }\n    if (images.length <= 0 && !imagesPropertyType) {\n        src = doc(\"link[rel=image_src]\").attr(\"href\");\n        if (src) {\n            src = url_1.default.resolve(rootUrl, src);\n            images = [src];\n        }\n        else {\n            nodes = doc(\"img\");\n            if (nodes === null || nodes === void 0 ? void 0 : nodes.length) {\n                dic = {};\n                images = [];\n                nodes.each(function (_, node) {\n                    if (node.type === \"tag\")\n                        src = node.attribs.src;\n                    if (src && !dic[src]) {\n                        dic[src] = true;\n                        // width = node.attribs.width;\n                        // height = node.attribs.height;\n                        images.push(url_1.default.resolve(rootUrl, src));\n                    }\n                });\n            }\n        }\n    }\n    return images;\n}\nfunction getVideos(doc) {\n    var videos = [];\n    var nodeTypes;\n    var nodeSecureUrls;\n    var nodeType;\n    var nodeSecureUrl;\n    var video;\n    var videoType;\n    var videoSecureUrl;\n    var width;\n    var height;\n    var videoObj;\n    var index;\n    var nodes = metaTag(doc, \"og:video\", \"property\") || metaTag(doc, \"og:video\", \"name\");\n    if (nodes === null || nodes === void 0 ? void 0 : nodes.length) {\n        nodeTypes =\n            metaTag(doc, \"og:video:type\", \"property\") ||\n                metaTag(doc, \"og:video:type\", \"name\");\n        nodeSecureUrls =\n            metaTag(doc, \"og:video:secure_url\", \"property\") ||\n                metaTag(doc, \"og:video:secure_url\", \"name\");\n        width =\n            metaTagContent(doc, \"og:video:width\", \"property\") ||\n                metaTagContent(doc, \"og:video:width\", \"name\");\n        height =\n            metaTagContent(doc, \"og:video:height\", \"property\") ||\n                metaTagContent(doc, \"og:video:height\", \"name\");\n        for (index = 0; index < nodes.length; index += 1) {\n            var node = nodes[index];\n            if (node.type === \"tag\")\n                video = node.attribs.content;\n            nodeType = nodeTypes === null || nodeTypes === void 0 ? void 0 : nodeTypes[index];\n            if ((nodeType === null || nodeType === void 0 ? void 0 : nodeType.type) === \"tag\") {\n                videoType = nodeType ? nodeType.attribs.content : null;\n            }\n            nodeSecureUrl = nodeSecureUrls === null || nodeSecureUrls === void 0 ? void 0 : nodeSecureUrls[index];\n            if ((nodeSecureUrl === null || nodeSecureUrl === void 0 ? void 0 : nodeSecureUrl.type) === \"tag\") {\n                videoSecureUrl = nodeSecureUrl ? nodeSecureUrl.attribs.content : null;\n            }\n            videoObj = {\n                url: video,\n                secureUrl: videoSecureUrl,\n                type: videoType,\n                width: width,\n                height: height,\n            };\n            if (videoType && videoType.indexOf(\"video/\") === 0) {\n                videos.splice(0, 0, videoObj);\n            }\n            else {\n                videos.push(videoObj);\n            }\n        }\n    }\n    return videos;\n}\n// returns default favicon (//hostname/favicon.ico) for a url\nfunction getDefaultFavicon(rootUrl) {\n    return url_1.default.resolve(rootUrl, \"/favicon.ico\");\n}\n// returns an array of URLs to favicon images\nfunction getFavicons(doc, rootUrl) {\n    var images = [];\n    var nodes = [];\n    var src;\n    var relSelectors = [\n        \"rel=icon\",\n        \"rel=\\\"shortcut icon\\\"\",\n        \"rel=apple-touch-icon\",\n    ];\n    relSelectors.forEach(function (relSelector) {\n        // look for all icon tags\n        nodes = doc(\"link[\".concat(relSelector, \"]\"));\n        // collect all images from icon tags\n        if (nodes.length) {\n            nodes.each(function (_, node) {\n                if (node.type === \"tag\")\n                    src = node.attribs.href;\n                if (src) {\n                    src = url_1.default.resolve(rootUrl, src);\n                    images.push(src);\n                }\n            });\n        }\n    });\n    // if no icon images, use default favicon location\n    if (images.length <= 0) {\n        images.push(getDefaultFavicon(rootUrl));\n    }\n    return images;\n}\nfunction parseImageResponse(url, contentType) {\n    return {\n        url: url,\n        mediaType: \"image\",\n        contentType: contentType,\n        favicons: [getDefaultFavicon(url)],\n    };\n}\nfunction parseAudioResponse(url, contentType) {\n    return {\n        url: url,\n        mediaType: \"audio\",\n        contentType: contentType,\n        favicons: [getDefaultFavicon(url)],\n    };\n}\nfunction parseVideoResponse(url, contentType) {\n    return {\n        url: url,\n        mediaType: \"video\",\n        contentType: contentType,\n        favicons: [getDefaultFavicon(url)],\n    };\n}\nfunction parseApplicationResponse(url, contentType) {\n    return {\n        url: url,\n        mediaType: \"application\",\n        contentType: contentType,\n        favicons: [getDefaultFavicon(url)],\n    };\n}\nfunction parseTextResponse(body, url, options, contentType) {\n    if (options === void 0) { options = {}; }\n    var doc = cheerio_1.default.load(body);\n    return {\n        url: url,\n        title: getTitle(doc),\n        siteName: getSiteName(doc),\n        description: getDescription(doc),\n        mediaType: getMediaType(doc) || \"website\",\n        contentType: contentType,\n        images: getImages(doc, url, options.imagesPropertyType),\n        videos: getVideos(doc),\n        favicons: getFavicons(doc, url),\n    };\n}\nfunction parseUnknownResponse(body, url, options, contentType) {\n    if (options === void 0) { options = {}; }\n    return parseTextResponse(body, url, options, contentType);\n}\nfunction parseResponse(response, options) {\n    try {\n        // console.log(\"[link-preview-js] response\", response);\n        var contentType = response.headers[\"content-type\"];\n        var contentTypeTokens = [];\n        var charset = null;\n        if (!contentType) {\n            return parseUnknownResponse(response.data, response.url, options);\n        }\n        if (contentType.includes(\";\")) {\n            contentTypeTokens = contentType.split(\";\");\n            contentType = contentTypeTokens[0];\n            for (var _i = 0, contentTypeTokens_1 = contentTypeTokens; _i < contentTypeTokens_1.length; _i++) {\n                var token = contentTypeTokens_1[_i];\n                if (token.indexOf(\"charset=\") !== -1) {\n                    charset = token.split(\"=\")[1];\n                }\n            }\n        }\n        // parse response depending on content type\n        if (constants_1.CONSTANTS.REGEX_CONTENT_TYPE_IMAGE.test(contentType)) {\n            return __assign(__assign({}, parseImageResponse(response.url, contentType)), { charset: charset });\n        }\n        if (constants_1.CONSTANTS.REGEX_CONTENT_TYPE_AUDIO.test(contentType)) {\n            return __assign(__assign({}, parseAudioResponse(response.url, contentType)), { charset: charset });\n        }\n        if (constants_1.CONSTANTS.REGEX_CONTENT_TYPE_VIDEO.test(contentType)) {\n            return __assign(__assign({}, parseVideoResponse(response.url, contentType)), { charset: charset });\n        }\n        if (constants_1.CONSTANTS.REGEX_CONTENT_TYPE_TEXT.test(contentType)) {\n            var htmlString_1 = response.data;\n            return __assign(__assign({}, parseTextResponse(htmlString_1, response.url, options, contentType)), { charset: charset });\n        }\n        if (constants_1.CONSTANTS.REGEX_CONTENT_TYPE_APPLICATION.test(contentType)) {\n            return __assign(__assign({}, parseApplicationResponse(response.url, contentType)), { charset: charset });\n        }\n        var htmlString = response.data;\n        return __assign(__assign({}, parseUnknownResponse(htmlString, response.url, options)), { charset: charset });\n    }\n    catch (e) {\n        throw new Error(\"link-preview-js could not fetch link information \".concat(e.toString()));\n    }\n}\n/**\n * Parses the text, extracts the first link it finds and does a HTTP request\n * to fetch the website content, afterwards it tries to parse the internal HTML\n * and extract the information via meta tags\n * @param text string, text to be parsed\n * @param options ILinkPreviewOptions\n */\nfunction getLinkPreview(text, options) {\n    var _a, _b, _c;\n    return __awaiter(this, void 0, void 0, function () {\n        var detectedUrl, resolvedUrl, timeout, controller, timeoutCounter, fetchOptions, fetchUrl, response, forwardedUrl, resolvedUrl, headers, normalizedResponse;\n        var _d;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    if (!text || typeof text !== \"string\") {\n                        throw new Error(\"link-preview-js did not receive a valid url or text\");\n                    }\n                    detectedUrl = text\n                        .replace(/\\n/g, \" \")\n                        .split(\" \")\n                        .find(function (token) { return constants_1.CONSTANTS.REGEX_VALID_URL.test(token); });\n                    if (!detectedUrl) {\n                        throw new Error(\"link-preview-js did not receive a valid a url or text\");\n                    }\n                    if ((options === null || options === void 0 ? void 0 : options.followRedirects) === \"manual\" && !(options === null || options === void 0 ? void 0 : options.handleRedirects)) {\n                        throw new Error(\"link-preview-js followRedirects is set to manual, but no handleRedirects function was provided\");\n                    }\n                    if (!!!(options === null || options === void 0 ? void 0 : options.resolveDNSHost)) return [3 /*break*/, 2];\n                    return [4 /*yield*/, options.resolveDNSHost(detectedUrl)];\n                case 1:\n                    resolvedUrl = _e.sent();\n                    throwOnLoopback(resolvedUrl);\n                    _e.label = 2;\n                case 2:\n                    timeout = (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : 3000;\n                    controller = createAbortController();\n                    timeoutCounter = setTimeout(function () { return controller.abort(); }, timeout);\n                    fetchOptions = {\n                        headers: (_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : {},\n                        redirect: (_c = options === null || options === void 0 ? void 0 : options.followRedirects) !== null && _c !== void 0 ? _c : \"error\",\n                        signal: controller.signal,\n                    };\n                    fetchUrl = (options === null || options === void 0 ? void 0 : options.proxyUrl)\n                        ? options.proxyUrl.concat(detectedUrl)\n                        : detectedUrl;\n                    return [4 /*yield*/, (0, cross_fetch_1.fetch)(fetchUrl, fetchOptions).catch(function (e) {\n                            if (e.name === \"AbortError\") {\n                                throw new Error(\"Request timeout\");\n                            }\n                            clearTimeout(timeoutCounter);\n                            throw e;\n                        })];\n                case 3:\n                    response = _e.sent();\n                    if (!(response.status > 300 &&\n                        response.status < 309 &&\n                        fetchOptions.redirect === \"manual\" &&\n                        (options === null || options === void 0 ? void 0 : options.handleRedirects))) return [3 /*break*/, 7];\n                    forwardedUrl = response.headers.get(\"location\") || \"\";\n                    if (!options.handleRedirects(fetchUrl, forwardedUrl)) {\n                        throw new Error(\"link-preview-js could not handle redirect\");\n                    }\n                    if (!!!(options === null || options === void 0 ? void 0 : options.resolveDNSHost)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, options.resolveDNSHost(forwardedUrl)];\n                case 4:\n                    resolvedUrl = _e.sent();\n                    throwOnLoopback(resolvedUrl);\n                    _e.label = 5;\n                case 5: return [4 /*yield*/, (0, cross_fetch_1.fetch)(forwardedUrl, fetchOptions)];\n                case 6:\n                    response = _e.sent();\n                    _e.label = 7;\n                case 7:\n                    clearTimeout(timeoutCounter);\n                    headers = {};\n                    response.headers.forEach(function (header, key) {\n                        headers[key] = header;\n                    });\n                    _d = {\n                        url: (options === null || options === void 0 ? void 0 : options.proxyUrl)\n                            ? response.url.replace(options.proxyUrl, \"\")\n                            : response.url,\n                        headers: headers\n                    };\n                    return [4 /*yield*/, response.text()];\n                case 8:\n                    normalizedResponse = (_d.data = _e.sent(),\n                        _d);\n                    return [2 /*return*/, parseResponse(normalizedResponse, options)];\n            }\n        });\n    });\n}\nexports.getLinkPreview = getLinkPreview;\n/**\n * Skip the library fetching the website for you, instead pass a response object\n * from whatever source you get and use the internal parsing of the HTML to return\n * the necessary information\n * @param response Preview Response\n * @param options IPreviewLinkOptions\n */\nfunction getPreviewFromContent(response, options) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            if (!response || typeof response !== \"object\") {\n                throw new Error(\"link-preview-js did not receive a valid response object\");\n            }\n            if (!response.url) {\n                throw new Error(\"link-preview-js did not receive a valid response object\");\n            }\n            return [2 /*return*/, parseResponse(response, options)];\n        });\n    });\n}\nexports.getPreviewFromContent = getPreviewFromContent;\nfunction createAbortController() {\n    return typeof AbortController == 'undefined'\n        ? new abort_controller_1.default()\n        : new AbortController();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/link-preview-js/build/index.js\n");

/***/ })

};
;